<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bioc="http://bpmn.io/schema/bpmn/biocolor/1.0" id="Definitions_1j21kxz" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="2.0.3">
  <bpmn:collaboration id="Collaboration_0v36rjh">
    <bpmn:participant id="UmzugsmeldungErfassenUndBezahlenParticipant" name="Umzugsmeldung erfassen und bezahlen" processRef="UmzugsmeldungErfassenUndBezahlen" />
  </bpmn:collaboration>
  <bpmn:process id="UmzugsmeldungErfassenUndBezahlen" name="Umzugsmeldung erfassen und bezahlen" isExecutable="true">
    <bpmn:subProcess id="UmzugsmeldungErfassen" name="Umzugsmeldung erfassen">
      <bpmn:documentation>Embedded Subprocess, um alle Aktivitäten zu umfassen, welche innerhalb von 48 h erledigt sein müssen, wenn der Prozess nicht abbrechen soll (siehe angeheftetes Fehler-Zwischenereignis).</bpmn:documentation>
      <bpmn:incoming>SequenceFlow_0idpplo</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1lte88j</bpmn:outgoing>
      <bpmn:startEvent id="StartEvent_09eswy9">
        <bpmn:outgoing>SequenceFlow_00uv839</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:endEvent id="AngabenErfolgreichGeprueft" name="Angaben erfolgreich geprüft">
        <bpmn:incoming>Weiter</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="SequenceFlow_0mei95i" sourceRef="PersonErfassenUndIdentifizieren" targetRef="WegzugsadresseErfassenUndPruefen" />
      <bpmn:sequenceFlow id="SequenceFlow_120w2r2" sourceRef="ZuzugsinformationenErfassenUndPruefen" targetRef="WeitereAngabenErfassen" />
      <bpmn:sequenceFlow id="SequenceFlow_001pwxn" sourceRef="WeitereAngabenErfassen" targetRef="DokumenteHochladen" />
      <bpmn:sequenceFlow id="SequenceFlow_12mko98" sourceRef="GebuehrenErmitteln" targetRef="AlleAngabenPruefen" />
      <bpmn:sequenceFlow id="SequenceFlow_00uv839" sourceRef="StartEvent_09eswy9" targetRef="ExclusiveGateway_0frtja1" />
      <bpmn:sequenceFlow id="SequenceFlow_15e28af" sourceRef="AlleAngabenPruefen" targetRef="WeiteresVorgehen" />
      <bpmn:sequenceFlow id="SequenceFlow_0hi1ppy" sourceRef="WegzugsadresseErfassenUndPruefen" targetRef="ZuzugsinformationenErfassenUndPruefen" />
      <bpmn:callActivity id="PersonErfassenUndIdentifizieren" name="Person erfassen und identifizieren" calledElement="PersonErfassenUndIdentifizieren">
        <bpmn:documentation>Im aufgerufenen Prozess erfasst der Meldepflichtige seine Personalien und seine politische Gemeinde. Im kantonalen Personenregister wird mit diesen Angaben geprüft, ob die Person existiert und ob sie für den Umzug berechtigt ist.

Theoretisch: Dem Prozess wird der BusinessKey, die BusinessCaseId und der Benutzername (meldePflichtiger) übergeben und umgekehrt folgende Variablen zurück genommen: municipalityNameMoveOut, firstName, officialName, sex, dateOfBirth, vn, localPersonId und movingAlongPersons. Praktisch: Es werden alle Variablen hin- und zurückgenommen, damit das Testing mittels vorausgefüllten Daten per REST einfacher klappt.</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:in businessKey="#{execution.processBusinessKey}" />
          <camunda:out source="municipalityNameMoveOut" target="municipalityNameMoveOut" />
          <camunda:out source="firstName" target="firstName" />
          <camunda:out source="officialName" target="officialName" />
          <camunda:out source="sex" target="sex" />
          <camunda:out source="dateOfBirth" target="dateOfBirth" />
          <camunda:out source="vn" target="vn" />
          <camunda:out source="localPersonId" target="localPersonId" />
          <camunda:out source="movingAlongPersons" target="movingAlongPersons" />
          <camunda:in variables="all" />
          <camunda:in source="businessCaseId" target="businessCaseId" />
          <camunda:in source="meldePflichtiger" target="meldePflichtiger" />
          <camunda:out variables="all" />
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_1p9ea31</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0mei95i</bpmn:outgoing>
      </bpmn:callActivity>
      <bpmn:callActivity id="WegzugsadresseErfassenUndPruefen" name="Wegzugsadresse erfassen und prüfen" calledElement="WegzugsadresseErfassenUndPruefen">
        <bpmn:documentation>Im aufgerufenen Prozess erfasst der Meldepflichtige seine Wegzugsadresse. Im Gebäude- und Wohnungsregister wird mit diesen Angaben geprüft, ob die Adresse existiert.

Theoretisch: Dem Prozess wird der BusinessKey, der Benutzername (meldePflichtiger) und municipalityNameMoveOut übergeben und umgekehrt folgende Variablen zurück genommen: houseNumberMoveOut, swissZipCodeMoveOut, streetMoveOut und townMoveOut. Praktisch: Es werden alle Variablen hin- und zurückgenommen, damit das Testing mittels vorausgefüllten Daten per REST einfacher klappt.</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:in businessKey="#{execution.processBusinessKey}" />
          <camunda:in source="meldePflichtiger" target="meldePflichtiger" />
          <camunda:in source="municipalityNameMoveOut" target="municipalityNameMoveOut" />
          <camunda:out source="houseNumberMoveOut" target="houseNumberMoveOut" />
          <camunda:out source="swissZipCodeMoveOut" target="swissZipCodeMoveOut" />
          <camunda:out source="streetMoveOut" target="streetMoveOut" />
          <camunda:out source="townMoveOut" target="townMoveOut" />
          <camunda:in variables="all" />
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_0mei95i</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0hi1ppy</bpmn:outgoing>
      </bpmn:callActivity>
      <bpmn:callActivity id="ZuzugsinformationenErfassenUndPruefen" name="Zuzugsinformationen erfassen und prüfen" calledElement="ZuzugsinformationenErfassenUndPruefen">
        <bpmn:documentation>Im aufgerufenen Prozess erfasst der Meldepflichtige die politische Zuzugsgemeinde und die Zuzugsadresse, welche im Gebäude- und Wohnungsregister geprüft wird. Existiert sie, kann er aus einer Liste von Wohnungen die zukünftige auswählen.

Theoretisch: Dem Prozess wird der BusinessKey und der Benutzername (meldePflichtiger) übergeben und umgekehrt folgende Variablen zurück genommen: houseNumberMoveIn, swissZipCodeMoveIn, streetMoveIn, townMoveIn, apartmentMoveIn und municipalityNameMoveIn. Praktisch: Es werden alle Variablen hin- und zurückgenommen, damit das Testing mittels vorausgefüllten Daten per REST einfacher klappt.</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:in businessKey="#{execution.processBusinessKey}" />
          <camunda:in source="meldePflichtiger" target="meldePflichtiger" />
          <camunda:out source="houseNumberMoveIn" target="houseNumberMoveIn" />
          <camunda:out source="swissZipCodeMoveIn" target="swissZipCodeMoveIn" />
          <camunda:out source="streetMoveIn" target="streetMoveIn" />
          <camunda:out source="townMoveIn" target="townMoveIn" />
          <camunda:out source="apartmentMoveIn" target="apartmentMoveIn" />
          <camunda:in variables="all" />
          <camunda:out source="municipalityNameMoveIn" target="municipalityNameMoveIn" />
          <camunda:out variables="all" />
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_0hi1ppy</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_120w2r2</bpmn:outgoing>
      </bpmn:callActivity>
      <bpmn:callActivity id="WeitereAngabenErfassen" name="Weitere Angaben erfassen" calledElement="WeitereAngabenErfassen">
        <bpmn:documentation>Im aufgerufenen Prozess erfasst der Meldepflichtige das Datum für Weg-/Zuzug, das zukünftige Wohnverhältnis (housingSituationMoveInMunicipallity), seine Kontaktangaben und für alle mitumziehenden Personen die Krankenkassen-Versichertennummer. Über einen REST-Service des VeKa-Centers wird geprüft, ob für die Personen eine Krankengrundversicherung abgeschlossen wurde (healthInsuranceData). Der Prozess geht allerdings auch weiter, wenn die Prüfung nicht erfolgreich ist.

Theoretisch: Dem Prozess wird der BusinessKey, der Benutzername (meldePflichtiger), eine personList (enthält Meldepflichtigen plus umziehende Personen), municipalityIdMoveIn und municipalityIdMoveOut übergeben und umgekehrt folgende Variablen zurück genommen: departureDate, arrivalDate, personHealthInsuranceList (jeder Eintrag enthält ein Person-Objekt mit der zusätzlichen Eigenschaft healthInsuranceData) und housingSituationMoveInMunicipallity. Praktisch: Es werden alle Variablen hin- und zurückgenommen, damit das Testing mittels vorausgefüllten Daten per REST einfacher klappt.</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:in businessKey="#{execution.processBusinessKey}" />
          <camunda:in source="meldePflichtiger" target="meldePflichtiger" />
          <camunda:in source="dateOfBirth" target="dateOfBirth" />
          <camunda:in source="personList" target="personList" />
          <camunda:in variables="all" />
          <camunda:out source="departureDate" target="departureDate" />
          <camunda:out source="arrivalDate" target="arrivalDate" />
          <camunda:out source="healthInsuranceDataList" target="healthInsuranceDataList" />
          <camunda:out source="housingSituationMoveInMunicipallity" target="housingSituationMoveInMunicipallity" />
          <camunda:out variables="all" />
          <camunda:in source="municipalityIdMoveIn" target="municipalityIdMoveIn" />
          <camunda:in source="municipalityIdMoveOut" target="municipalityIdMoveOut" />
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_120w2r2</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_001pwxn</bpmn:outgoing>
      </bpmn:callActivity>
      <bpmn:sequenceFlow id="SequenceFlow_05prxas" sourceRef="DokumenteHochladen" targetRef="GebuehrenErmitteln" />
      <bpmn:callActivity id="DokumenteHochladen" name="Dokumente hochladen" calledElement="DokumenteHochladen">
        <bpmn:documentation>Im aufgerufenen Prozess lädt der Meldepflichtige allenfalls erforderliche, eingescannte Dokumente für sich und die mitumziehenden Personen hoch.

Theoretisch: Dem Prozess wird der BusinessKey, der Benutzername (meldePflichtiger), municipalityIdMoveOut und municipalityIdMoveIn übergeben und umgekehrt folgende Variablen zurück genommen: documentsExist und documents. Praktisch: Es werden alle Variablen hin- und zurückgenommen, damit das Testing mittels vorausgefüllten Daten per REST einfacher klappt.</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:in businessKey="#{execution.processBusinessKey}" />
          <camunda:in source="municipalityIdMoveOut" target="municipalityIdMoveOut" />
          <camunda:in source="municipalityIdMoveIn" target="municipalityIdMoveIn" />
          <camunda:in variables="all" />
          <camunda:out variables="all" />
          <camunda:in source="meldePflichtiger" target="meldePflichtiger" />
          <camunda:out source="documentsExist" target="documentsExist" />
          <camunda:out source="documents" target="documents" />
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_001pwxn</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_05prxas</bpmn:outgoing>
      </bpmn:callActivity>
      <bpmn:serviceTask id="GebuehrenErmitteln" name="Gebühren ermitteln" camunda:delegateExpression="#{getFeesAdapter}">
        <bpmn:documentation>Prozessvariable mit relevanten Gebühren basierend auf Angaben in der Umzugsplattform-Datenbank erstellen

Zunächst wird geprüft, ob es sich um Wegzug/Zuzug oder Umzug handelt. Je nachdem werden dann über ein JPA-Repository eine oder zwei Gemeinde-Objekte aus der Datenbank geladen.

Für jedes Objekt wird die relevante Gebühr (Zuzug, Wegzug oder Umzug) ausgelesen und einer HashMap hinzugefügt inklusive Angabe, um welche Art von Gebühr es sich handelt (z.B. "Wegzugsgebühr"). Falls mindestens eine Gebühr anfällt, wird die HashMap der Prozessvariable feeMap zugewiesen, ansonsten wird dieser Variable der Wert null zugewiesen.

Zudem wird die Prozessvariable feesTotal auf den Wert der Gebühren insgesamt gesetzt, also 0, falls keine Gebühren anfallen und ansonsten die Summe aller Gebühren.</bpmn:documentation>
        <bpmn:incoming>SequenceFlow_05prxas</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_12mko98</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:userTask id="AlleAngabenPruefen" name="Alle Angaben prüfen" camunda:formKey="embedded:app:forms/AlleAngabenPruefenForm.html" camunda:assignee="${meldePflichtiger}">
        <bpmn:documentation>Alle vom Meldepflichtigen gemachten Angaben werden dargestellt. Die Angaben werden in folgenden Panels gruppiert:

- Gebühren (sofern das Total grösser als 0 Franken beträgt). Ausgabe als Tabelle mit Gebührentyp und Gebührenhöhe
- Personalien
- Mitumziehende Personen (nur Vornamen)
- Dokumente (wenn grundsätzlich überhaupt Dokumente hätten hochgeladen werden können):
  - Ausgabe als Tabelle
  - Spalte 1 enthält Vorname der Person (z.B. Hans)
  - Spalte 2 enthält Name des Dokuments (z.B. Heiratsurkunde)
  - Spalte 3 enthält entweder "Kein Dokument hochgeladen" oder der Dateiname der hochgeladenen Datei mit einem Download-Link
- Kontaktangaben
- Wegzugsinformationen
- Zuzugsinformationen
- Wohnverhältnis-Informationen

Zuunterst zwei Checkboxes:

- Checkbox "Alle Angaben sind korrekt" (allDataCorrect), default-mässig angehakt. Ist sie nicht angehakt, soll ein Info-Alert angezeigt werden: "Sie werden zurück zum ersten Formular geführt, womit Sie in jedem Formular Ihre Angaben nochmals korrigieren können. Bestehende Eingaben bleiben erhalten."

- Checkbox "Ich akzeptiere, die Gebühr von Fr. {{total}}.- zu bezahlen" (feesAccepted) -&gt; default-mässig angehakt. Ist sie nicht angehakt, soll ein Danger-Alert angezeigt werden: "Sind Sie sicher? Hierdurch werden alle Ihre Angaben aus Gründen der Nachvollziehbarkeit in der Umzugsplattform-Datenbank gespeichert, aber nicht an die Weg- und Zuzugsgemeinden weiter geleitet. Das heisst, Sie müssen in jedem Fall den Umzug persönlich am Schalter der Weg- und Zuzugsgemeinde melden."</bpmn:documentation>
        <bpmn:incoming>SequenceFlow_12mko98</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_15e28af</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:exclusiveGateway id="WeiteresVorgehen" name="Weiteres Vorgehen?">
        <bpmn:incoming>SequenceFlow_15e28af</bpmn:incoming>
        <bpmn:outgoing>Weiter</bpmn:outgoing>
        <bpmn:outgoing>AngabenKorrigieren</bpmn:outgoing>
        <bpmn:outgoing>Abbrechen</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Weiter" name="Weiter" sourceRef="WeiteresVorgehen" targetRef="AngabenErfolgreichGeprueft">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${allDataCorrect &amp;&amp; (feesAccepted == null || feesAccepted)}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:exclusiveGateway id="ExclusiveGateway_0frtja1">
        <bpmn:incoming>SequenceFlow_00uv839</bpmn:incoming>
        <bpmn:incoming>AngabenKorrigieren</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_1p9ea31</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="SequenceFlow_1p9ea31" sourceRef="ExclusiveGateway_0frtja1" targetRef="PersonErfassenUndIdentifizieren" />
      <bpmn:sequenceFlow id="AngabenKorrigieren" name="Angaben korrigieren" sourceRef="WeiteresVorgehen" targetRef="ExclusiveGateway_0frtja1">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!allDataCorrect}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Abbrechen" name="Abbrechen" sourceRef="WeiteresVorgehen" targetRef="GebuehrenNichtAkzeptiertPersistieren">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!feesAccepted}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:endEvent id="WegenNichtAkzeptierterGebuehrenAbgebrochenErrorEvent" name="Wegen nicht akzeptierter Gebühren abgebrochen">
        <bpmn:incoming>SequenceFlow_0eixy45</bpmn:incoming>
        <bpmn:errorEventDefinition errorRef="Error_0ye3wrs" />
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="SequenceFlow_0eixy45" sourceRef="GebuehrenNichtAkzeptiertPersistieren" targetRef="WegenNichtAkzeptierterGebuehrenAbgebrochenErrorEvent" />
      <bpmn:serviceTask id="GebuehrenNichtAkzeptiertPersistieren" name="Gebühren nicht akzeptiert persistieren" camunda:delegateExpression="#{persistUserEntriesAndStatusAdapter}">
        <bpmn:documentation>Aufruf der JavaDelegate-implementierenden Klasse 'PersistUserEntriesAndStatusDelegate', um Personenidentifikations- und Status-Angaben zu persistieren. Erstere sollen nur gespeichert werden, wenn die entsprechende Person nicht bereits in der Datenbank existiert. Letztere sollen in der TransactionLog-Entität gespeichert werden.

Die Personenidentifikations-Angaben sind bereits als Prozessvariablen vorhanden (localPersonId, vn, firstName, officialName, dateOfBirth und sex). In einem Input-Parameter wird die Prozessvariable 'status' gesetzt mit "Fehlgeschlagen wegen nicht akzeptierter Gebühren".</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="status">Fehlgeschlagen wegen nicht akzeptierter Gebühren</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Abbrechen</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0eixy45</bpmn:outgoing>
      </bpmn:serviceTask>
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="SequenceFlow_0idpplo" sourceRef="UmzugsmeldungGestartet" targetRef="UmzugsmeldungErfassen" />
    <bpmn:sequenceFlow id="SequenceFlow_11zgl40" sourceRef="AchtundvierzigStundenVerstrichen" targetRef="PersonIdentifikationErfasstGateway" />
    <bpmn:sequenceFlow id="SequenceFlow_1lte88j" sourceRef="UmzugsmeldungErfassen" targetRef="ExclusiveGateway_1t9zc0d" />
    <bpmn:startEvent id="UmzugsmeldungGestartet" name="Umzugsmeldung gestartet">
      <bpmn:documentation>Dieses Prozesstartereignis wird aufgerufen vom Prozess 'UmzugMelden' und ist nicht gedacht, um unabhängig davon (z.B. aus der Tasklist) aufgerufen zu werden.</bpmn:documentation>
      <bpmn:outgoing>SequenceFlow_0idpplo</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:boundaryEvent id="AchtundvierzigStundenVerstrichen" name="48 h&#10;verstrichen" attachedToRef="UmzugsmeldungErfassen">
      <bpmn:documentation>Es soll vermieden werden, dass Prozessinstanzen ewig hängen bleiben, weil ein Meldepflichtiger zwar Formulare aufruft, aber eines dieser Formulare nie absendet, sondern z.B. den Browser vorher schliesst. Daher ein Timeout von 48 h (PT48H).

Fürs Testing Zeitdauer auf wenige Sekunden (PT30S) bis Minuten (PT3M) stellen.

In einem End-Listener wird die Prozessvariable 'status' gesetzt mit "Fehlgeschlagen wegen Zeitüberschreitung beim Erfassen der Umzugsmeldung".</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="JavaScript">execution.setVariable("status", "Fehlgeschlagen wegen Zeitüberschreitung beim Erfassen der Umzugsmeldung");</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:outgoing>SequenceFlow_11zgl40</bpmn:outgoing>
      <bpmn:timerEventDefinition>
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT48H</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:boundaryEvent>
    <bpmn:exclusiveGateway id="PersonIdentifikationErfasstGateway" name="Person-identifikation erfasst?">
      <bpmn:incoming>SequenceFlow_11zgl40</bpmn:incoming>
      <bpmn:outgoing>PersonIdentifikationNichtErfasst</bpmn:outgoing>
      <bpmn:outgoing>PersonIdentifikationErfasst</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0ebozi5">
      <bpmn:incoming>SequenceFlow_0xvv0xn</bpmn:incoming>
      <bpmn:incoming>PersonIdentifikationNichtErfasst</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1u4hpcs</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:endEvent id="WegenZeitueberschreitungAbgebrochen" name="Wegen Zeitüber-schreitung abgebrochen">
      <bpmn:incoming>SequenceFlow_1u4hpcs</bpmn:incoming>
      <bpmn:errorEventDefinition errorRef="Error_0fmfamk" />
    </bpmn:endEvent>
    <bpmn:serviceTask id="AbbruchWegenZeitueberschreitungPersistieren" name="Abbruch wegen Zeitüberschreitung persistieren" camunda:delegateExpression="#{persistUserEntriesAndStatusAdapter}">
      <bpmn:documentation>Aufruf der JavaDelegate-implementierenden Klasse 'PersistUserEntriesAndStatusDelegate', um Personenidentifikations- und Status-Angaben zu persistieren. Erstere sollen nur gespeichert werden, wenn die entsprechende Person nicht bereits in der Datenbank existiert. Letztere sollen in der TransactionLog-Entität gespeichert werden.

Die Personenidentifikations-Angaben sind bereits als Prozessvariablen vorhanden (localPersonId, vn, firstName, officialName, dateOfBirth und sex), ebenfalls der Status (status).

In einem Input-Parameter wird die Prozessvariable 'status' gesetzt mit "Wegen Zeitüberschreitung abgebrochen".
</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="status">Wegen Zeitüberschreitung abgebrochen</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>PersonIdentifikationErfasst</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0xvv0xn</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="PersonIdentifikationNichtErfasst" name="nein" sourceRef="PersonIdentifikationErfasstGateway" targetRef="ExclusiveGateway_0ebozi5">
      <bpmn:documentation>Siehe Dokumentation bei ja</bpmn:documentation>
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${execution.getVariable('localPersonId') == null}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="PersonIdentifikationErfasst" name="ja" sourceRef="PersonIdentifikationErfasstGateway" targetRef="AbbruchWegenZeitueberschreitungPersistieren">
      <bpmn:documentation>Mindestens die AHV-Nummer oder die Kombination aus Vorname, Nachname und Geburtsdatum müssen erfasst sein, dass es sich lohnt, überhaupt einen Log-Eintrag zu erstellen. Wenn diese Informationen fehlen, kann davon ausgegangen werden, dass lediglich der Prozess gestartet wurde, aber nicht einmal der erste User Task "Personidentifikation erfassen" abgeschlossen wurde.
Dies kann vereinfacht abgefragt werden, indem
a) Bei "Personenidentifikator generieren" Async after gesetzt ist
b) Nur das Vorhandensein von localPersonId geprüft wird (darf also nicht null sein)</bpmn:documentation>
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${execution.getVariable('localPersonId') != null}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_0xvv0xn" sourceRef="AbbruchWegenZeitueberschreitungPersistieren" targetRef="ExclusiveGateway_0ebozi5" />
    <bpmn:sequenceFlow id="SequenceFlow_1u4hpcs" sourceRef="ExclusiveGateway_0ebozi5" targetRef="WegenZeitueberschreitungAbgebrochen" />
    <bpmn:exclusiveGateway id="ExclusiveGateway_175tgn6">
      <bpmn:incoming>GebuehrenFallenNichtAn</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_04m4p8a</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1y8ukhh</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:userTask id="AbschlussBestaetigungAnzeigen" name="Abschluss-Bestätigung anzeigen" camunda:asyncAfter="true" camunda:formKey="embedded:app:forms/AbschlussBestaetigungAnzeigenForm.html" camunda:assignee="${meldePflichtiger}">
      <bpmn:documentation>Als Abschlussbestätigung folgende Paragraphen hinzufügen:
Nur falls Gebühren existieren: "Die Zahlung wurde erfolgreich durchgeführt."

Immer: "Sobald Sie auf Complete drücken, werden wir Ihre Angaben an die zuständigen Einwohnergemeinde(n) weiterleiten und Ihnen zudem eine Bestätigung zukommen lassen.

Je nach Antwortzeiten der Gemeinden werden Sie dann in den nächsten Stunden oder Tagen von uns über die Entscheidungen der Gemeinde(n) benachrichtigt."</bpmn:documentation>
      <bpmn:incoming>SequenceFlow_1y8ukhh</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0mh6vb8</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_1t9zc0d" name="Fallen Gebühren an?">
      <bpmn:incoming>SequenceFlow_1lte88j</bpmn:incoming>
      <bpmn:outgoing>GebuehrenFallenAn</bpmn:outgoing>
      <bpmn:outgoing>GebuehrenFallenNichtAn</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="FehlgeschlageneZahlungPersistieren" name="Fehlgeschlagene Zahlung persistieren" camunda:delegateExpression="#{persistUserEntriesAndStatusAdapter}">
      <bpmn:documentation>Aufruf der JavaDelegate-implementierenden Klasse 'PersistUserEntriesAndStatusDelegate', um Personenidentifikations- und Status-Angaben zu persistieren. Erstere sollen nur gespeichert werden, wenn die entsprechende Person nicht bereits in der Datenbank existiert. Letztere sollen in der TransactionLog-Entität gespeichert werden.

Die Personenidentifikations-Angaben sind bereits als Prozessvariablen vorhanden (localPersonId, vn, firstName, officialName, dateOfBirth und sex), ebenfalls der Status (status).

In einem Input-Parameter wird die Prozessvariable 'status' gesetzt mit "Wegen fehlgeschlagener Zahlung abgebrochen".</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="status">Wegen fehlgeschlagener Zahlung abgebrochen</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1d0k5r8</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1vi0gkw</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:callActivity id="ZahlungDurchfuehren" name="Zahlung durchführen" calledElement="ZahlungDurchfuehren">
      <bpmn:documentation>Im aufgerufenen Prozess erfasst der Meldepflichtige die Zahlungsdetails (z.B. Kreditkartennummer) in einem Stripe Checkout-Formular. Die Zahlungsdetails werden direkt an den Stripe-Server gesendet, also so, dass nur Stripe diese Zahlungsdetails erhält und somit die Umzugsplattform automatisch PCI compliant ist. Im Normalfall erhält Stripe Checkout ein Token zurück und übergibt dieses dem Umzugsplattform-Client. Dieser sendet das Token für die weitere Verarbeitung als Prozessvariable an die Process Engine. 

In einem Service Task wird nun eine Kartenbelastungsanfrage an Stripe mit dem Token gesendet. Synchron kommt nun eine Antwort von Stripe zurück, entweder eine erfolgreiche Belastung der Kreditkarte oder ein Error. Im ersten Fall endet damit der Bezahlvorgang, im anderen Fall muss er es erneut versuchen. Falls er dies nicht innert 24 h erledigt, wird der Zahlungsvorgang als fehlgeschlagen gekennzeichnet (Fehler).  

Theoretisch: Dem Prozess wird der BusinessKey, der Benutzername (meldePflichtiger) und die Gebührentabelle (feeMap) übergeben und umgekehrt keine Variablen zurück genommen. Praktisch: Es werden alle Variablen hin- und zurückgenommen, damit das Testing mittels vorausgefüllten Daten per REST einfacher klappt.</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:in businessKey="#{execution.processBusinessKey}" />
        <camunda:in source="meldePflichtiger" target="meldePflichtiger" />
        <camunda:in source="feeMap" target="feeMap" />
        <camunda:in variables="all" />
        <camunda:out variables="all" />
      </bpmn:extensionElements>
      <bpmn:incoming>GebuehrenFallenAn</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_04m4p8a</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:endEvent id="WegenFehlgeschlagenerZahlungAbgebrochen" name="Wegen fehlgeschlagener Zahlung abgebrochen">
      <bpmn:incoming>SequenceFlow_1vi0gkw</bpmn:incoming>
      <bpmn:errorEventDefinition errorRef="Error_1ayoalr" />
    </bpmn:endEvent>
    <bpmn:exclusiveGateway id="ExclusiveGateway_08sma34">
      <bpmn:incoming>SequenceFlow_0mh6vb8</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_01v74w3</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1mqg9bq</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:boundaryEvent id="DreiMinutenVerstrichen" name="3 Minuten verstrichen" attachedToRef="AbschlussBestaetigungAnzeigen">
      <bpmn:documentation>Es soll vermieden werden, dass Prozessinstanzen ewig hängen bleiben, weil ein Meldepflichtiger das letzte Bestätigungsformular nie absendet (Complete), sondern z.B. den Browser vorher schliesst. Daher ein Timeout von 3 Minuten (PT3M). So kurz, weil er ja entweder unmittelbar nach dem Zahlungsvorgang diesen Bildschirm anschaut oder es ansonsten bleiben lässt und ohnehin asynchron benachrichtigt wird.

Der Prozess soll allerdings anschliessend ganz normal weiter gehen, wie wenn er auf Complete gedrückt hätte.</bpmn:documentation>
      <bpmn:outgoing>SequenceFlow_01v74w3</bpmn:outgoing>
      <bpmn:timerEventDefinition>
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT3M</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:boundaryEvent>
    <bpmn:sequenceFlow id="SequenceFlow_04m4p8a" sourceRef="ZahlungDurchfuehren" targetRef="ExclusiveGateway_175tgn6" />
    <bpmn:sequenceFlow id="GebuehrenFallenNichtAn" name="nein" sourceRef="ExclusiveGateway_1t9zc0d" targetRef="ExclusiveGateway_175tgn6">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${feeMap==null}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1y8ukhh" sourceRef="ExclusiveGateway_175tgn6" targetRef="AbschlussBestaetigungAnzeigen" />
    <bpmn:sequenceFlow id="SequenceFlow_0mh6vb8" sourceRef="AbschlussBestaetigungAnzeigen" targetRef="ExclusiveGateway_08sma34" />
    <bpmn:sequenceFlow id="GebuehrenFallenAn" name="ja" sourceRef="ExclusiveGateway_1t9zc0d" targetRef="ZahlungDurchfuehren">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${feeMap!=null}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1d0k5r8" sourceRef="ZahlungFehlgeschlagen" targetRef="FehlgeschlageneZahlungPersistieren" />
    <bpmn:sequenceFlow id="SequenceFlow_1vi0gkw" sourceRef="FehlgeschlageneZahlungPersistieren" targetRef="WegenFehlgeschlagenerZahlungAbgebrochen" />
    <bpmn:sequenceFlow id="SequenceFlow_01v74w3" sourceRef="DreiMinutenVerstrichen" targetRef="ExclusiveGateway_08sma34" />
    <bpmn:sequenceFlow id="SequenceFlow_1mqg9bq" sourceRef="ExclusiveGateway_08sma34" targetRef="ErfolgreicheUmzugsmeldungErfasungMitteilen" />
    <bpmn:serviceTask id="ErfolgreicheUmzugsmeldungErfasungMitteilen" name="Erfolgreiche Umzugsmeldung-Erfasung mitteilen" camunda:type="external" camunda:topic="Notification">
      <bpmn:documentation>Dem Meldepflichtigen wird der aktuelle Status mitgeteilt, einerseits per EMail und andererseits (sofern in KontaktangabenErfassenForm so gewählt) per SMS.

Die eigentliche Nachricht wird über den Kantonalen Benachrichtigungsdienst durchgeführt, welcher sich für das Topic 'Notification' bei der Umzugsplattform registiert. Demnach ist die Implementation dieses Service Tasks ein External Task.

Der kantonale Benachrichtigungsdienst erwartet eine HashMap mit dort spezifierten Key-Value-Paaren. Diese HashMap wird in einer JavaDelegate-Klasse (Named=GenerateNotificationTaskVariableAdapter) durchgeführt, welche in einem Start Listener dieses Service Tasks aufgerufen wird.

Die Key-Value-Paare kann diese einerseits basierend auf bereits vorhandenen Prozessvariablen zusammenstellen, zum andern benötigt sie folgende zwei Prozessvariablen, die als Input-Parameter in diesem Service Task erstellt werden:
- notificationSubject: Bestätigung eUmzugsmeldung-Erfassung
- notificationMessageBody: Danke für die Erfassung der eUmzugsmeldung, welche nun an die Einwohnerkontrollen zur Prüfung weitergeleitet werden.</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:executionListener delegateExpression="#{GenerateNotificationTaskVariableAdapter}" event="start" />
        <camunda:inputOutput>
          <camunda:inputParameter name="notificationSubject">Bestätigung eUmzugsmeldung-Erfassung</camunda:inputParameter>
          <camunda:inputParameter name="notificationMessageBody">Danke für die Erfassung der eUmzugsmeldung, welche nun an die Einwohnerkontrollen zur Prüfung weitergeleitet werden.</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1mqg9bq</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_12n4w31</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:endEvent id="UmzugsmeldungErfolgreichErfasst" name="Umzugsmeldung erfolgreich erfasst">
      <bpmn:incoming>SequenceFlow_1bqdavl</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="ErfolgreicheUmzugsmeldungErfassungPersistieren" name="Erfolgreiche Umzugsmeldung-Erfassung persistieren" camunda:delegateExpression="#{persistUserEntriesAndStatusAdapter}">
      <bpmn:documentation>Aufruf der JavaDelegate-implementierenden Klasse 'PersistUserEntriesAndStatusDelegate', um Personenidentifikations- und Status-Angaben zu persistieren. Erstere sollen nur gespeichert werden, wenn die entsprechende Person nicht bereits in der Datenbank existiert. Letztere sollen in der TransactionLog-Entität gespeichert werden.

Die Personenidentifikations-Angaben sind bereits als Prozessvariablen vorhanden (localPersonId, vn, firstName, officialName, dateOfBirth und sex).

In einem Input-Parameter wird die Prozessvariable 'status' gesetzt mit "Erfolgreiche Erfassung der Umzugsmeldung".</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="status">Erfolgreiche Erfassung der Umzugsmeldung</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_12n4w31</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1bqdavl</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_12n4w31" sourceRef="ErfolgreicheUmzugsmeldungErfasungMitteilen" targetRef="ErfolgreicheUmzugsmeldungErfassungPersistieren" />
    <bpmn:sequenceFlow id="SequenceFlow_1bqdavl" sourceRef="ErfolgreicheUmzugsmeldungErfassungPersistieren" targetRef="UmzugsmeldungErfolgreichErfasst" />
    <bpmn:boundaryEvent id="ZahlungFehlgeschlagen" name="Zahlung fehlgeschlagen" attachedToRef="ZahlungDurchfuehren">
      <bpmn:documentation>Kommt es innerhalb des Zahlungsprozesses zu einem Business-Fehler (z.B. Zahlung nicht innerhalb der Frist durchgeführt), so wird dieser hier abgefangen und im folgenden Sequenzfluss behandelt.

In einem End-Listener wird die Prozessvariable 'status' gesetzt auf "Fehlgeschlagen bei Zahlung durchführen".</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="JavaScript">execution.setVariable("status", "Fehlgeschlagen bei Zahlung durchführen.");</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:outgoing>SequenceFlow_1d0k5r8</bpmn:outgoing>
      <bpmn:errorEventDefinition errorRef="Error_1ak9z8o" />
    </bpmn:boundaryEvent>
  </bpmn:process>
  <bpmn:error id="Error_0fmfamk" name="ErrorUmzugsmeldungErfassenUndBezahlen" errorCode="ZeitueberschreitungBenutzer" />
  <bpmn:error id="Error_1ak9z8o" name="ErrorZahlungFehlgeschlagen" />
  <bpmn:error id="Error_1ayoalr" name="ErrorUmzugsmeldungErfassenUndBezahlen" errorCode="ZahlungFehlgeschlagen" />
  <bpmn:error id="Error_0ye3wrs" name="ErrorGebuehrenNichtAkzeptiert" errorCode="ErrorGebuehrenNichtAkzeptiert" />
  <bpmn:error id="Error_0lboqji" name="ErrorUmzugsmeldungErfassenUndBezahlen" errorCode="ErrorGebuehrenNichtAkzeptiert" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_0v36rjh">
      <bpmndi:BPMNShape id="Participant_1206ssw_di" bpmnElement="UmzugsmeldungErfassenUndBezahlenParticipant">
        <dc:Bounds x="2" y="71" width="2048" height="551" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="UmzugsmeldungGestartet">
        <dc:Bounds x="78" y="254" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="55" y="297" width="83" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="EndEvent_1rb068c_di" bpmnElement="UmzugsmeldungErfolgreichErfasst">
        <dc:Bounds x="1967" y="254" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1941" y="297" width="89" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0idpplo_di" bpmnElement="SequenceFlow_0idpplo">
        <di:waypoint x="114" y="272" />
        <di:waypoint x="146" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="SubProcess_0vam6rt_di" bpmnElement="UmzugsmeldungErfassen" isExpanded="true" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <dc:Bounds x="146" y="92" width="987" height="355" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BoundaryEvent_1o5j1g4_di" bpmnElement="AchtundvierzigStundenVerstrichen" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <dc:Bounds x="261" y="429" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="211" y="455" width="53" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0xvv0xn_di" bpmnElement="SequenceFlow_0xvv0xn" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <di:waypoint x="478" y="531" />
        <di:waypoint x="538" y="531" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0ebozi5_di" bpmnElement="ExclusiveGateway_0ebozi5" isMarkerVisible="true" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <dc:Bounds x="538" y="506" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1u4hpcs_di" bpmnElement="SequenceFlow_1u4hpcs" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <di:waypoint x="588" y="531" />
        <di:waypoint x="644" y="531" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0ldwwai_di" bpmnElement="PersonIdentifikationErfasstGateway" isMarkerVisible="true" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <dc:Bounds x="254" y="506" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="182" y="511" width="62" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1snvvu0_di" bpmnElement="PersonIdentifikationNichtErfasst" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <di:waypoint x="279" y="556" />
        <di:waypoint x="279" y="597" />
        <di:waypoint x="563" y="597" />
        <di:waypoint x="563" y="556" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="290" y="575" width="21" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_11zgl40_di" bpmnElement="SequenceFlow_11zgl40" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <di:waypoint x="279" y="465" />
        <di:waypoint x="279" y="506" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_1d6hl3c_di" bpmnElement="WegenZeitueberschreitungAbgebrochen" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <dc:Bounds x="644" y="513" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="621" y="553" width="82" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="StartEvent_09eswy9_di" bpmnElement="StartEvent_09eswy9">
        <dc:Bounds x="166" y="119" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="EndEvent_1fsuc39_di" bpmnElement="AngabenErfolgreichGeprueft">
        <dc:Bounds x="1055" y="236" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1028" y="279" width="90" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_175tgn6_di" bpmnElement="ExclusiveGateway_175tgn6" isMarkerVisible="true">
        <dc:Bounds x="1393" y="247" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_1t9zc0d_di" bpmnElement="ExclusiveGateway_1t9zc0d" isMarkerVisible="true">
        <dc:Bounds x="1169" y="247" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1153" y="307" width="82" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_0ozjnut_di" bpmnElement="AbschlussBestaetigungAnzeigen">
        <dc:Bounds x="1482" y="232" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0v2jjuq_di" bpmnElement="GebuehrenFallenAn">
        <di:waypoint x="1219" y="272" />
        <di:waypoint x="1262" y="272" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1233" y="247" width="8" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1242trx_di" bpmnElement="GebuehrenFallenNichtAn">
        <di:waypoint x="1194" y="247" />
        <di:waypoint x="1194" y="197" />
        <di:waypoint x="1418" y="197" />
        <di:waypoint x="1418" y="247" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1200" y="200" width="21" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1y8ukhh_di" bpmnElement="SequenceFlow_1y8ukhh">
        <di:waypoint x="1443" y="272" />
        <di:waypoint x="1482" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_04m4p8a_di" bpmnElement="SequenceFlow_04m4p8a">
        <di:waypoint x="1362" y="272" />
        <di:waypoint x="1393" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BoundaryEvent_0sieegt_di" bpmnElement="ZahlungFehlgeschlagen" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="1261" y="294" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1198" y="325" width="73" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1d0k5r8_di" bpmnElement="SequenceFlow_1d0k5r8" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <di:waypoint x="1279" y="330" />
        <di:waypoint x="1279" y="385" />
        <di:waypoint x="1333" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1vi0gkw_di" bpmnElement="SequenceFlow_1vi0gkw" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <di:waypoint x="1433" y="385" />
        <di:waypoint x="1476" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_1ox16lp_di" bpmnElement="WegenFehlgeschlagenerZahlungAbgebrochen" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="1476" y="367" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1451" y="412" width="85" height="53" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0mei95i_di" bpmnElement="SequenceFlow_0mei95i">
        <di:waypoint x="310" y="238" />
        <di:waypoint x="367" y="238" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_120w2r2_di" bpmnElement="SequenceFlow_120w2r2">
        <di:waypoint x="622" y="238" />
        <di:waypoint x="670" y="238" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_001pwxn_di" bpmnElement="SequenceFlow_001pwxn">
        <di:waypoint x="770" y="238" />
        <di:waypoint x="796" y="238" />
        <di:waypoint x="796" y="295" />
        <di:waypoint x="260" y="295" />
        <di:waypoint x="260" y="315" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_12mko98_di" bpmnElement="SequenceFlow_12mko98">
        <di:waypoint x="467" y="355" />
        <di:waypoint x="522" y="355" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_00uv839_di" bpmnElement="SequenceFlow_00uv839">
        <di:waypoint x="202" y="137" />
        <di:waypoint x="235" y="137" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_15e28af_di" bpmnElement="SequenceFlow_15e28af">
        <di:waypoint x="622" y="355" />
        <di:waypoint x="828" y="355" />
        <di:waypoint x="828" y="254" />
        <di:waypoint x="854" y="254" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0hi1ppy_di" bpmnElement="SequenceFlow_0hi1ppy">
        <di:waypoint x="467" y="238" />
        <di:waypoint x="522" y="238" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1lte88j_di" bpmnElement="SequenceFlow_1lte88j">
        <di:waypoint x="1133" y="272" />
        <di:waypoint x="1169" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BoundaryEvent_0yosntn_di" bpmnElement="DreiMinutenVerstrichen" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="1539" y="294" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1485" y="320" width="53" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="CallActivity_0ilm21n_di" bpmnElement="PersonErfassenUndIdentifizieren">
        <dc:Bounds x="210" y="198" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="CallActivity_0wck348_di" bpmnElement="WegzugsadresseErfassenUndPruefen">
        <dc:Bounds x="367" y="198" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="CallActivity_1ds9c4y_di" bpmnElement="ZuzugsinformationenErfassenUndPruefen">
        <dc:Bounds x="522" y="198" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_163y65k_di" bpmnElement="PersonIdentifikationErfasst" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <di:waypoint x="304" y="531" />
        <di:waypoint x="378" y="531" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="326" y="509" width="8" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="CallActivity_12i13lc_di" bpmnElement="WeitereAngabenErfassen">
        <dc:Bounds x="670" y="198" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_05prxas_di" bpmnElement="SequenceFlow_05prxas">
        <di:waypoint x="310" y="355" />
        <di:waypoint x="367" y="355" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="CallActivity_1xn6vm1_di" bpmnElement="DokumenteHochladen">
        <dc:Bounds x="210" y="315" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0qdvp34_di" bpmnElement="GebuehrenErmitteln" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="367" y="315" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_1nlu7rj_di" bpmnElement="AlleAngabenPruefen" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="522" y="315" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0b249hv_di" bpmnElement="WeiteresVorgehen" isMarkerVisible="true">
        <dc:Bounds x="854" y="229" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="815" y="213" width="53" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0u6040x_di" bpmnElement="Weiter">
        <di:waypoint x="904" y="254" />
        <di:waypoint x="1055" y="254" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="906" y="232" width="32" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0frtja1_di" bpmnElement="ExclusiveGateway_0frtja1" isMarkerVisible="true">
        <dc:Bounds x="235" y="112" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1p9ea31_di" bpmnElement="SequenceFlow_1p9ea31">
        <di:waypoint x="260" y="162" />
        <di:waypoint x="260" y="198" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0oeu7l9_di" bpmnElement="AngabenKorrigieren">
        <di:waypoint x="879" y="229" />
        <di:waypoint x="879" y="137" />
        <di:waypoint x="285" y="137" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="892" y="186" width="52" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1krji0q_di" bpmnElement="Abbrechen" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <di:waypoint x="879" y="279" />
        <di:waypoint x="879" y="355" />
        <di:waypoint x="915" y="355" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="893" y="288" width="53" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_18x8f3n_di" bpmnElement="WegenNichtAkzeptierterGebuehrenAbgebrochenErrorEvent" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="1055" y="337" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1040" y="378" width="65" height="53" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0eixy45_di" bpmnElement="SequenceFlow_0eixy45" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <di:waypoint x="1015" y="355" />
        <di:waypoint x="1055" y="355" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_14d9ckh_di" bpmnElement="AbbruchWegenZeitueberschreitungPersistieren" bioc:stroke="#1E88E5" bioc:fill="#BBDEFB">
        <dc:Bounds x="378" y="491" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0nhbdvy_di" bpmnElement="GebuehrenNichtAkzeptiertPersistieren" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="915" y="315" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0n32zod_di" bpmnElement="FehlgeschlageneZahlungPersistieren" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="1333" y="345" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0oz8vy1_di" bpmnElement="ErfolgreicheUmzugsmeldungErfassungPersistieren" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="1831" y="232" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="CallActivity_0e63u17_di" bpmnElement="ZahlungDurchfuehren">
        <dc:Bounds x="1262" y="232" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0mh6vb8_di" bpmnElement="SequenceFlow_0mh6vb8">
        <di:waypoint x="1582" y="272" />
        <di:waypoint x="1608" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_08sma34_di" bpmnElement="ExclusiveGateway_08sma34" isMarkerVisible="true" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <dc:Bounds x="1608.278" y="247" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_01v74w3_di" bpmnElement="SequenceFlow_01v74w3" bioc:stroke="#FB8C00" bioc:fill="#FFE0B2">
        <di:waypoint x="1557" y="330" />
        <di:waypoint x="1557" y="387" />
        <di:waypoint x="1633" y="387" />
        <di:waypoint x="1633" y="297" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_1bhsv6z_di" bpmnElement="ErfolgreicheUmzugsmeldungErfasungMitteilen" bioc:stroke="#8E24AA" bioc:fill="#E1BEE7">
        <dc:Bounds x="1692" y="232" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1mqg9bq_di" bpmnElement="SequenceFlow_1mqg9bq">
        <di:waypoint x="1658" y="272" />
        <di:waypoint x="1692" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_12n4w31_di" bpmnElement="SequenceFlow_12n4w31">
        <di:waypoint x="1792" y="272" />
        <di:waypoint x="1831" y="272" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1bqdavl_di" bpmnElement="SequenceFlow_1bqdavl">
        <di:waypoint x="1931" y="272" />
        <di:waypoint x="1967" y="272" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
